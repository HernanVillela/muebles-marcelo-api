# Dockerfile para la API de NestJS (optimizado para DESARROLLO)

# Usamos una imagen base de Node.js 22.
FROM node:22-alpine

# Establecemos el directorio de trabajo dentro del contenedor.
WORKDIR /usr/src/app

# Copiamos los archivos de dependencias.
# Esto aprovecha el caché de Docker. Si no cambian, no se reinstalará todo.
COPY package*.json ./

# Instalamos TODAS las dependencias, incluyendo las de desarrollo (devDependencies).
# Esto es clave para que el comando 'nest' esté disponible.
RUN npm install

# Copiamos el resto del código fuente.
# Gracias al volumen en docker-compose, este código se mantendrá sincronizado.
COPY . .

# Exponemos el puerto 3000.
EXPOSE 3000

# El comando por defecto se define en el docker-compose.yml.
# Esta línea es solo un placeholder en caso de que se ejecute el contenedor solo.
CMD [ "npm", "run", "start:dev" ]
